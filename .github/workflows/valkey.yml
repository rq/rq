name: Valkey Test

on:
  push:
    branches:
      - master
  pull_request:

permissions:
  contents: read # to fetch code (actions/checkout)

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  valkey-test:
    # Descriptive name for the job runs in the UI
    name: Py${{ matrix.python-version }}/Valkey${{ matrix.valkey-version }}/redis-py${{ matrix.redis-py-version }}
    runs-on: ubuntu-latest
    timeout-minutes: 10

    # Define the service container for Valkey
    services:
      valkey:
        # Use the official Valkey image
        image: valkey/valkey:${{ matrix.valkey-version }}
        # Map port 6379 in the container to port 6379 on the runner host
        ports:
          - 6379:6379
        # Add a health check to wait for Valkey to be ready
        options: >-
          --health-cmd "valkey-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    strategy:
      matrix:
        python-version: ["3.12", "3.13"]
        valkey-version: ["7.2", "8.0"]
        redis-py-version: ["5", "4"]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v5.5.0
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install hatch
          # Install the specific redis-py version for this matrix combination
          pip install redis==${{ matrix.redis-py-version }}

      - name: Run RQ tests with pytest
        run: |
          RUN_SLOW_TESTS_TOO=1 hatch run test:cov --durations=5
        env:
          # Ensure tests connect to the Valkey service container if needed
          VALKEY_HOST: localhost # Use VALKEY_HOST if RQ tests check for it, otherwise REDIS_HOST is likely used
          VALKEY_PORT: 6379

      - name: Upload coverage to Codecov
        uses: codecov/codecov-action@v5.4.0
        with:
          files: ./coverage.xml
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }} # Store your Codecov token in secrets
